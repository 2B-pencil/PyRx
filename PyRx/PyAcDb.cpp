#include "stdafx.h"
#include "PyAcDb.h"
#include "PyDbEntity.h"
#include "PyDbObjectId.h"
#include "PyDbDatabase.h"
#include "PyDbHostApplicationServices.h"
#include "PyDbBlockTableRecord.h"
#include "PyDbSymbolTableRecord.h"
#include "PyDbDictionary.h"
#include "PyDbSymbolTable.h"
#include "PyCmColorBase.h"

using namespace boost::python;

PyDbObject openDbObject(const PyDbObjectId& id, AcDb::OpenMode mode)
{
    AcDbObject* pObj = nullptr;
    if (acdbOpenAcDbObject(pObj, id.m_id, mode) == eOk)
        return PyDbObject{ pObj, true };
    throw PyNullObject();
}

PyDbObject openDbEntity(const PyDbObjectId& id, AcDb::OpenMode mode)
{
    if (id.m_id.objectClass()->isDerivedFrom(AcDbEntity::desc()))
    {
        AcDbEntity* pObj = nullptr;
        if (acdbOpenAcDbEntity(pObj, id.m_id, mode) == eOk)
            return PyDbObject(pObj, true);
    }
    throw PyNullObject();
}

BOOST_PYTHON_MODULE(PyDb)
{
#ifndef  PyRxDebug
    docstring_options local_docstring_options(false, true, false);
#endif // ! PyRxDebug


 #ifdef PyRxDebug
    def("openDbObject", openDbObject);
    def("openDbEntity", openDbEntity);
#endif

    //create in class order!
    makeAcCmColorWrapper();
    makeAcCmEntityColorWrapper();
    makeAcCmTransparencyWrapper();
    makeAcDbObjectIdWrapper();
    makeAcDbObjectWrapper();
    makeAcDbEntityWrapper();
    makeAcDbDictionaryWrapper();
    makeAcDbSymbolTableWrapper();
    makeAcDbSymbolTableRecordWrapper();
    makeAcDbBlockTableRecordWrapper();
    makeAcDbDatabaseWrapper();
    makeAcDbHostApplicationServicesWrapper();



    enum_<AcDb::Visibility>("Visibility")
        .value("Visible", AcDb::Visibility::kVisible)
        .value("Invisible", AcDb::Visibility::kInvisible)
        ;

    enum_<AcCmEntityColor::Color>("AcCmEntityColor_Color")//TODO:?
        .value("Red", AcCmEntityColor::Color::kRed)
        .value("Green", AcCmEntityColor::Color::kGreen)
        .value("Blue", AcCmEntityColor::Color::kBlue)
        ;
    enum_<AcCmEntityColor::ColorMethod>("AcCmEntityColor_ColorMethod")//TODO:?
        .value("ByLayer", AcCmEntityColor::ColorMethod::kByLayer)
        .value("ByBlock", AcCmEntityColor::ColorMethod::kByBlock)
        .value("ByColor", AcCmEntityColor::ColorMethod::kByColor)
        .value("ByACI", AcCmEntityColor::ColorMethod::kByACI)
        .value("ByPen", AcCmEntityColor::ColorMethod::kByPen)
        .value("Foreground", AcCmEntityColor::ColorMethod::kForeground)
        .value("LayerOff", AcCmEntityColor::ColorMethod::kLayerOff)
        .value("LayerFrozen", AcCmEntityColor::ColorMethod::kLayerFrozen)
        .value("None", AcCmEntityColor::ColorMethod::kNone)
        ;
    enum_<AcCmEntityColor::ACIcolorMethod>("AcCmEntityColor_ACIcolorMethod")//TODO:?
        .value("kACIbyBlock", AcCmEntityColor::ACIcolorMethod::kACIbyBlock)
        .value("kACIforeground", AcCmEntityColor::ACIcolorMethod::kACIforeground)
        .value("kACIbyLayer", AcCmEntityColor::ACIcolorMethod::kACIbyLayer)
        .value("kACIclear", AcCmEntityColor::ACIcolorMethod::kACIclear)
        .value("kACIstandard", AcCmEntityColor::ACIcolorMethod::kACIstandard)
        .value("kACImaximum", AcCmEntityColor::ACIcolorMethod::kACImaximum)
        .value("kACInone", AcCmEntityColor::ACIcolorMethod::kACInone)
        .value("kACIminimum", AcCmEntityColor::ACIcolorMethod::kACIminimum)
        .value("kACIfrozenLayer", AcCmEntityColor::ACIcolorMethod::kACIfrozenLayer)
        ;
    enum_<AcCmTransparency::transparencyMethod>("TransparencyMethod")
        .value("ByLayer", AcCmTransparency::transparencyMethod::kByLayer)
        .value("ByBlock", AcCmTransparency::transparencyMethod::kByBlock)
        .value("ByAlpha", AcCmTransparency::transparencyMethod::kByAlpha)
        .value("ErrorValue", AcCmTransparency::transparencyMethod::kErrorValue)
        ;
    enum_<AcDb::DxfCode>("DxfCode")
        .value("DxfInvalid", AcDb::kDxfInvalid)
        .value("DxfXDictionary", AcDb::kDxfXDictionary)
        .value("DxfPReactors", AcDb::kDxfPReactors)
        .value("DxfOperator", AcDb::kDxfOperator)
        .value("DxfXDataStart", AcDb::kDxfXDataStart)
        .value("DxfHeaderId", AcDb::kDxfHeaderId)
        .value("DxfFirstEntId", AcDb::kDxfFirstEntId)
        .value("DxfEnd", AcDb::kDxfEnd)
        .value("DxfStart", AcDb::kDxfStart)
        .value("DxfText", AcDb::kDxfText)
        .value("DxfXRefPath", AcDb::kDxfXRefPath)
        .value("DxfShapeName", AcDb::kDxfShapeName)
        .value("DxfBlockName", AcDb::kDxfBlockName)
        .value("DxfAttributeTag", AcDb::kDxfAttributeTag)
        .value("DxfSymbolTableName", AcDb::kDxfSymbolTableName)
        .value("DxfMstyleName", AcDb::kDxfMstyleName)
        .value("DxfSymTableRecName", AcDb::kDxfSymTableRecName)
        .value("DxfAttributePrompt", AcDb::kDxfAttributePrompt)
        .value("DxfDimStyleName", AcDb::kDxfDimStyleName)
        .value("DxfLinetypeProse", AcDb::kDxfLinetypeProse)
        .value("DxfTextFontFile", AcDb::kDxfTextFontFile)
        .value("DxfDescription", AcDb::kDxfDescription)
        .value("DxfDimPostStr", AcDb::kDxfDimPostStr)
        .value("DxfTextBigFontFile", AcDb::kDxfTextBigFontFile)
        .value("DxfDimAPostStr", AcDb::kDxfDimAPostStr)
        .value("DxfCLShapeName", AcDb::kDxfCLShapeName)
        .value("DxfSymTableRecComments", AcDb::kDxfSymTableRecComments)
        .value("DxfHandle", AcDb::kDxfHandle)
        .value("DxfDimBlk", AcDb::kDxfDimBlk)
        .value("DxfDimBlk1", AcDb::kDxfDimBlk1)
        .value("DxfLinetypeName", AcDb::kDxfLinetypeName)
        .value("DxfDimBlk2", AcDb::kDxfDimBlk2)
        .value("DxfTextStyleName", AcDb::kDxfTextStyleName)
        .value("DxfLayerName", AcDb::kDxfLayerName)
        .value("DxfCLShapeText", AcDb::kDxfCLShapeText)
        .value("DxfXCoord", AcDb::kDxfXCoord)
        .value("DxfYCoord", AcDb::kDxfYCoord)
        .value("DxfZCoord", AcDb::kDxfZCoord)
        .value("DxfElevation", AcDb::kDxfElevation)
        .value("DxfThickness", AcDb::kDxfThickness)
        .value("DxfReal", AcDb::kDxfReal)
        .value("DxfViewportHeight", AcDb::kDxfViewportHeight)
        .value("DxfTxtSize", AcDb::kDxfTxtSize)
        .value("DxfTxtStyleXScale", AcDb::kDxfTxtStyleXScale)
        .value("DxfViewWidth", AcDb::kDxfViewWidth)
        .value("DxfViewportAspect", AcDb::kDxfViewportAspect)
        .value("DxfTxtStylePSize", AcDb::kDxfTxtStylePSize)
        .value("DxfViewLensLength", AcDb::kDxfViewLensLength)
        .value("DxfViewFrontClip", AcDb::kDxfViewFrontClip)
        .value("DxfViewBackClip", AcDb::kDxfViewBackClip)
        .value("DxfShapeXOffset", AcDb::kDxfShapeXOffset)
        .value("DxfShapeYOffset", AcDb::kDxfShapeYOffset)
        .value("DxfViewHeight", AcDb::kDxfViewHeight)
        .value("DxfShapeScale", AcDb::kDxfShapeScale)
        .value("DxfPixelScale", AcDb::kDxfPixelScale)
        .value("DxfLinetypeScale", AcDb::kDxfLinetypeScale)
        .value("DxfDashLength", AcDb::kDxfDashLength)
        .value("DxfMlineOffset", AcDb::kDxfMlineOffset)
        .value("DxfLinetypeElement", AcDb::kDxfLinetypeElement)
        .value("DxfAngle", AcDb::kDxfAngle)
        .value("DxfViewportSnapAngle", AcDb::kDxfViewportSnapAngle)
        .value("DxfViewportTwist", AcDb::kDxfViewportTwist)
        .value("DxfVisibility", AcDb::kDxfVisibility)
        .value("DxfViewportGridDisplay", AcDb::kDxfViewportGridDisplay)
        .value("DxfLayerLinetype", AcDb::kDxfLayerLinetype)
        .value("DxfViewportGridMajor", AcDb::kDxfViewportGridMajor)
        .value("DxfColor", AcDb::kDxfColor)
        .value("DxfHasSubentities", AcDb::kDxfHasSubentities)
        .value("DxfViewportVisibility", AcDb::kDxfViewportVisibility)
        .value("DxfViewportActive", AcDb::kDxfViewportActive)
        .value("DxfViewportNumber", AcDb::kDxfViewportNumber)
        .value("DxfInt16", AcDb::kDxfInt16)
        .value("DxfViewMode", AcDb::kDxfViewMode)
        .value("DxfCircleSides", AcDb::kDxfCircleSides)
        .value("DxfViewportZoom", AcDb::kDxfViewportZoom)
        .value("DxfViewportIcon", AcDb::kDxfViewportIcon)
        .value("DxfViewportSnap", AcDb::kDxfViewportSnap)
        .value("DxfViewportGrid", AcDb::kDxfViewportGrid)
        .value("DxfViewportSnapStyle", AcDb::kDxfViewportSnapStyle)
        .value("DxfViewportSnapPair", AcDb::kDxfViewportSnapPair)
        .value("DxfRegAppFlags", AcDb::kDxfRegAppFlags)
        .value("DxfTxtStyleFlags", AcDb::kDxfTxtStyleFlags)
        .value("DxfLinetypeAlign", AcDb::kDxfLinetypeAlign)
        .value("DxfLinetypePDC", AcDb::kDxfLinetypePDC)
        .value("DxfInt32", AcDb::kDxfInt32)
#ifndef BRXAPP
        .value("DxfVertexIdentifier", AcDb::kDxfVertexIdentifier)
#endif // !BRXAPP
        .value("DxfSubclass", AcDb::kDxfSubclass)
        .value("DxfEmbeddedObjectStart", AcDb::kDxfEmbeddedObjectStart)
        .value("DxfControlString", AcDb::kDxfControlString)
        .value("DxfDimVarHandle", AcDb::kDxfDimVarHandle)
        .value("DxfUCSOrg", AcDb::kDxfUCSOrg)
        .value("DxfUCSOriX", AcDb::kDxfUCSOriX)
        .value("DxfUCSOriY", AcDb::kDxfUCSOriY)
        .value("DxfXReal", AcDb::kDxfXReal)
        .value("DxfViewBrightness", AcDb::kDxfViewBrightness)
        .value("DxfViewContrast", AcDb::kDxfViewContrast)
        .value("DxfInt64", AcDb::kDxfInt64)
        .value("DxfXInt16", AcDb::kDxfXInt16)
        .value("DxfNormalX", AcDb::kDxfNormalX)
        .value("DxfNormalY", AcDb::kDxfNormalY)
        .value("DxfNormalZ", AcDb::kDxfNormalZ)
        .value("DxfXXInt16", AcDb::kDxfXXInt16)
        .value("DxfInt8", AcDb::kDxfInt8)
        .value("DxfRenderMode", AcDb::kDxfRenderMode)
        .value("DxfDefaultLightingType", AcDb::kDxfDefaultLightingType)
        .value("DxfShadowFlags", AcDb::kDxfShadowFlags)
        .value("DxfBool", AcDb::kDxfBool)
        .value("DxfDefaultLightingOn", AcDb::kDxfDefaultLightingOn)
        .value("DxfXTextString", AcDb::kDxfXTextString)
        .value("DxfBinaryChunk", AcDb::kDxfBinaryChunk)
        .value("DxfArbHandle", AcDb::kDxfArbHandle)
        .value("DxfSoftPointerId", AcDb::kDxfSoftPointerId)
        .value("DxfViewBackgroundId", AcDb::kDxfViewBackgroundId)
        .value("DxfShadePlotId", AcDb::kDxfShadePlotId)
        .value("DxfLiveSectionId", AcDb::kDxfLiveSectionId)
        .value("DxfLiveSectionName", AcDb::kDxfLiveSectionName)
        .value("DxfHardPointerId", AcDb::kDxfHardPointerId)
        .value("DxfObjVisualStyleId", AcDb::kDxfObjVisualStyleId)
        .value("DxfVpVisualStyleId", AcDb::kDxfVpVisualStyleId)
        .value("DxfMaterialId", AcDb::kDxfMaterialId)
        .value("DxfVisualStyleId", AcDb::kDxfVisualStyleId)
        .value("DxfDragVisualStyleId", AcDb::kDxfDragVisualStyleId)
        .value("DxfSoftOwnershipId", AcDb::kDxfSoftOwnershipId)
        .value("DxfHardOwnershipId", AcDb::kDxfHardOwnershipId)
        .value("DxfSunId", AcDb::kDxfSunId)
        .value("DxfLineWeight", AcDb::kDxfLineWeight)
        .value("DxfPlotStyleNameType", AcDb::kDxfPlotStyleNameType)
        .value("DxfPlotStyleNameId", AcDb::kDxfPlotStyleNameId)
        .value("DxfXXXInt16", AcDb::kDxfXXXInt16)
        .value("DxfLayoutName", AcDb::kDxfLayoutName)
        .value("DxfColorRGB", AcDb::kDxfColorRGB)
        .value("DxfColorName", AcDb::kDxfColorName)
        .value("DxfAlpha", AcDb::kDxfAlpha)
        .value("DxfGradientObjType", AcDb::kDxfGradientObjType)
        .value("DxfGradientPatType", AcDb::kDxfGradientPatType)
        .value("DxfGradientTintType", AcDb::kDxfGradientTintType)
        .value("DxfGradientColCount", AcDb::kDxfGradientColCount)
        .value("DxfGradientAngle", AcDb::kDxfGradientAngle)
        .value("DxfGradientShift", AcDb::kDxfGradientShift)
        .value("DxfGradientTintVal", AcDb::kDxfGradientTintVal)
        .value("DxfGradientColVal", AcDb::kDxfGradientColVal)
        .value("DxfGradientName", AcDb::kDxfGradientName)
#ifndef BRXAPP
        .value("DxfFaceStyleId", AcDb::kDxfFaceStyleId)
        .value("DxfEdgeStyleId", AcDb::kDxfEdgeStyleId)
#endif
        .value("DxfComment", AcDb::kDxfComment)
        .value("DxfXdAsciiString", AcDb::kDxfXdAsciiString)
        .value("DxfRegAppName", AcDb::kDxfRegAppName)
        .value("DxfXdControlString", AcDb::kDxfXdControlString)
        .value("DxfXdLayerName", AcDb::kDxfXdLayerName)
        .value("DxfXdBinaryChunk", AcDb::kDxfXdBinaryChunk)
        .value("DxfXdHandle", AcDb::kDxfXdHandle)
        .value("DxfXdXCoord", AcDb::kDxfXdXCoord)
        .value("DxfXdYCoord", AcDb::kDxfXdYCoord)
        .value("DxfXdZCoord", AcDb::kDxfXdZCoord)
        .value("DxfXdWorldXCoord", AcDb::kDxfXdWorldXCoord)
        .value("DxfXdWorldYCoord", AcDb::kDxfXdWorldYCoord)
        .value("DxfXdWorldZCoord", AcDb::kDxfXdWorldZCoord)
        .value("DxfXdWorldXDisp", AcDb::kDxfXdWorldXDisp)
        .value("DxfXdWorldYDisp", AcDb::kDxfXdWorldYDisp)
        .value("DxfXdWorldZDisp", AcDb::kDxfXdWorldZDisp)
        .value("DxfXdWorldXDir", AcDb::kDxfXdWorldXDir)
        .value("DxfXdWorldYDir", AcDb::kDxfXdWorldYDir)
        .value("DxfXdWorldZDir", AcDb::kDxfXdWorldZDir)
        .value("DxfXdReal", AcDb::kDxfXdReal)
        .value("DxfXdDist", AcDb::kDxfXdDist)
        .value("DxfXdScale", AcDb::kDxfXdScale)
        .value("DxfXdInteger16", AcDb::kDxfXdInteger16)
        .value("DxfXdInteger32", AcDb::kDxfXdInteger32)
#ifndef BRXAPP
        .value("DxfXdMax", AcDb::kDxfXdMax)
#endif
        ;
    enum_<AcDb::OpenMode>("OpenMode")
        .value("ForRead", AcDb::OpenMode::kForRead)
        .value("ForWrite", AcDb::OpenMode::kForWrite)
        .value("ForNotify", AcDb::OpenMode::kForNotify)
        ;
    enum_<AcDb::LineWeight>("LineWeight")
        .value("LnWt000", AcDb::LineWeight::kLnWt000)
        .value("LnWt005", AcDb::LineWeight::kLnWt005)
        .value("LnWt009", AcDb::LineWeight::kLnWt009)
        .value("LnWt013", AcDb::LineWeight::kLnWt013)
        .value("LnWt015", AcDb::LineWeight::kLnWt015)
        .value("LnWt018", AcDb::LineWeight::kLnWt018)
        .value("LnWt020", AcDb::LineWeight::kLnWt020)
        .value("LnWt025", AcDb::LineWeight::kLnWt025)
        .value("LnWt030", AcDb::LineWeight::kLnWt030)
        .value("LnWt035", AcDb::LineWeight::kLnWt035)
        .value("LnWt040", AcDb::LineWeight::kLnWt040)
        .value("LnWt050", AcDb::LineWeight::kLnWt050)
        .value("LnWt053", AcDb::LineWeight::kLnWt053)
        .value("LnWt060", AcDb::LineWeight::kLnWt060)
        .value("LnWt070", AcDb::LineWeight::kLnWt070)
        .value("LnWt080", AcDb::LineWeight::kLnWt080)
        .value("LnWt090", AcDb::LineWeight::kLnWt090)
        .value("LnWt100", AcDb::LineWeight::kLnWt100)
        .value("LnWt106", AcDb::LineWeight::kLnWt106)
        .value("LnWt120", AcDb::LineWeight::kLnWt120)
        .value("LnWt140", AcDb::LineWeight::kLnWt140)
        .value("LnWt158", AcDb::LineWeight::kLnWt158)
        .value("LnWt200", AcDb::LineWeight::kLnWt200)
        .value("LnWt211", AcDb::LineWeight::kLnWt211)
        .value("LnWtByLayer", AcDb::LineWeight::kLnWtByLayer)
        .value("LnWtByBlock", AcDb::LineWeight::kLnWtByBlock)
        .value("LnWtByLwDefault", AcDb::LineWeight::kLnWtByLwDefault)
        ;
    enum_<AcDb::PlotStyleNameType>("PlotStyleNameType")
        .value("PlotStyleNameByLayer", AcDb::PlotStyleNameType::kPlotStyleNameByLayer)
        .value("PlotStyleNameByBlock", AcDb::PlotStyleNameType::kPlotStyleNameByBlock)
        .value("PlotStyleNameIsDictDefault", AcDb::PlotStyleNameType::kPlotStyleNameIsDictDefault)
        .value("PlotStyleNameById", AcDb::PlotStyleNameType::kPlotStyleNameById)
        ;
    enum_<AcDb::EndCaps>("EndCaps")
        .value("EndCapNone", AcDb::EndCaps::kEndCapNone)
        .value("EndCapRound", AcDb::EndCaps::kEndCapRound)
        .value("EndCapAngle", AcDb::EndCaps::kEndCapAngle)
        .value("EndCapSquare", AcDb::EndCaps::kEndCapSquare)
        ;
    enum_<AcDb::UnitsValue>("UnitsValue")
        .value("UnitsUndefined", AcDb::UnitsValue::kUnitsUndefined)
        .value("UnitsInches", AcDb::UnitsValue::kUnitsInches)
        .value("UnitsFeet", AcDb::UnitsValue::kUnitsFeet)
        .value("UnitsMiles", AcDb::UnitsValue::kUnitsMiles)
        .value("UnitsMillimeters", AcDb::UnitsValue::kUnitsMillimeters)
        .value("UnitsCentimeters", AcDb::UnitsValue::kUnitsCentimeters)
        .value("UnitsMeters", AcDb::UnitsValue::kUnitsMeters)
        .value("UnitsKilometers", AcDb::UnitsValue::kUnitsKilometers)
        .value("UnitsMicroinches", AcDb::UnitsValue::kUnitsMicroinches)
        .value("UnitsMils", AcDb::UnitsValue::kUnitsMils)
        .value("UnitsYards", AcDb::UnitsValue::kUnitsYards)
        .value("UnitsAngstroms", AcDb::UnitsValue::kUnitsAngstroms)
        .value("UnitsNanometers", AcDb::UnitsValue::kUnitsNanometers)
        .value("UnitsMicrons", AcDb::UnitsValue::kUnitsMicrons)
        .value("UnitsDecimeters", AcDb::UnitsValue::kUnitsDecimeters)
        .value("UnitsDekameters", AcDb::UnitsValue::kUnitsDekameters)
        .value("UnitsHectometers", AcDb::UnitsValue::kUnitsHectometers)
        .value("UnitsGigameters", AcDb::UnitsValue::kUnitsGigameters)
        .value("UnitsAstronomical", AcDb::UnitsValue::kUnitsAstronomical)
        .value("UnitsLightYears", AcDb::UnitsValue::kUnitsLightYears)
        .value("UnitsParsecs", AcDb::UnitsValue::kUnitsParsecs)
        .value("UnitsUSSurveyFeet", AcDb::UnitsValue::kUnitsUSSurveyFeet)
        .value("UnitsUSSurveyInch", AcDb::UnitsValue::kUnitsUSSurveyInch)
        .value("UnitsUSSurveyYard", AcDb::UnitsValue::kUnitsUSSurveyYard)
        .value("UnitsUSSurveyMile", AcDb::UnitsValue::kUnitsUSSurveyMile)
        .value("UnitsMax", AcDb::UnitsValue::kUnitsMax)
        ;
    enum_<AcDb::JoinStyle>("JoinStyle")
        .value("JnStylNone", AcDb::JoinStyle::kJnStylNone)
        .value("JnStylRound", AcDb::JoinStyle::kJnStylRound)
        .value("JnStylAngle", AcDb::JoinStyle::kJnStylAngle)
        .value("JnStylFlat", AcDb::JoinStyle::kJnStylFlat)
        ;
    enum_<AcDb::MeasurementValue>("MeasurementValue")
        .value("English", AcDb::MeasurementValue::kEnglish)
        .value("Metric", AcDb::MeasurementValue::kMetric)
        ;
    enum_<AcDb::UpdateOption>("UpdateOption")
        .value("UpdateOptionNone", AcDb::UpdateOption::kUpdateOptionNone)
        .value("UpdateOptionSkipFormat", AcDb::UpdateOption::kUpdateOptionSkipFormat)
        .value("UpdateOptionUpdateRowHeight", AcDb::UpdateOption::kUpdateOptionUpdateRowHeight)
        .value("UpdateOptionUpdateColumnWidth", AcDb::UpdateOption::kUpdateOptionUpdateColumnWidth)
        .value("UpdateOptionAllowSourceUpdate", AcDb::UpdateOption::kUpdateOptionAllowSourceUpdate)
        .value("UpdateOptionForceFullSourceUpdate", AcDb::UpdateOption::kUpdateOptionForceFullSourceUpdate)
        .value("UpdateOptionOverwriteContentModifiedAfterUpdate", AcDb::UpdateOption::kUpdateOptionOverwriteContentModifiedAfterUpdate)
        .value("UpdateOptionOverwriteFormatModifiedAfterUpdate", AcDb::UpdateOption::kUpdateOptionOverwriteFormatModifiedAfterUpdate)
        .value("UpdateOptionForPreview", AcDb::UpdateOption::kUpdateOptionForPreview)
        .value("UpdateOptionIncludeXrefs", AcDb::UpdateOption::kUpdateOptionIncludeXrefs)
        .value("SkipFormatAfterFirstUpdate", AcDb::UpdateOption::kSkipFormatAfterFirstUpdate)
        ;
    enum_<AcDb::UpdateDirection>("UpdateDirection")
        .value("UpdateDirSourceToData", AcDb::UpdateDirection::kUpdateDirSourceToData)
        .value("UpdateDirDataToSource", AcDb::UpdateDirection::kUpdateDirDataToSource)
        ;
    enum_<AcDb::DuplicateRecordCloning>("DuplicateRecordCloning")
        .value("DrcNotApplicable", AcDb::DuplicateRecordCloning::kDrcNotApplicable)
        .value("DrcIgnore", AcDb::DuplicateRecordCloning::kDrcIgnore)
        .value("DrcReplace", AcDb::DuplicateRecordCloning::kDrcReplace)
        .value("DrcXrefMangleName", AcDb::DuplicateRecordCloning::kDrcXrefMangleName)
        .value("DrcMangleName", AcDb::DuplicateRecordCloning::kDrcMangleName)
        .value("DrcUnmangleName", AcDb::DuplicateRecordCloning::kDrcUnmangleName)
        ;
    enum_<AcDb::OrthographicView>("OrthographicView")
        .value("NonOrthoView", AcDb::OrthographicView::kNonOrthoView)
        .value("TopView", AcDb::OrthographicView::kTopView)
        .value("BottomView", AcDb::OrthographicView::kBottomView)
        .value("FrontView", AcDb::OrthographicView::kFrontView)
        .value("BackView", AcDb::OrthographicView::kBackView)
        .value("LeftView", AcDb::OrthographicView::kLeftView)
        .value("RightView", AcDb::OrthographicView::kRightView)
        ;
    enum_<Acad::ErrorStatus>("ErrorStatus")
        .value("Ok", Acad::ErrorStatus::eOk)
        .value("NotImplementedYet", Acad::ErrorStatus::eNotImplementedYet)
        .value("NotApplicable", Acad::ErrorStatus::eNotApplicable)
        .value("InvalidInput", Acad::ErrorStatus::eInvalidInput)
        .value("AmbiguousInput", Acad::ErrorStatus::eAmbiguousInput)
        .value("AmbiguousOutput", Acad::ErrorStatus::eAmbiguousOutput)
        .value("OutOfMemory", Acad::ErrorStatus::eOutOfMemory)
        .value("BufferTooSmall", Acad::ErrorStatus::eBufferTooSmall)
        .value("InvalidOpenState ", Acad::ErrorStatus::eInvalidOpenState)
        .value("EntityInInactiveLayout", Acad::ErrorStatus::eEntityInInactiveLayout)
        .value("HandleExists", Acad::ErrorStatus::eHandleExists)
        .value("NullHandle", Acad::ErrorStatus::eNullHandle)
        .value("BrokenHandle", Acad::ErrorStatus::eBrokenHandle)
        .value("UnknownHandle", Acad::ErrorStatus::eUnknownHandle)
        .value("HandleInUse", Acad::ErrorStatus::eHandleInUse)
        .value("NullObjectPointer", Acad::ErrorStatus::eNullObjectPointer)
        .value("NullObjectId", Acad::ErrorStatus::eNullObjectId)
        .value("NullBlockName", Acad::ErrorStatus::eNullBlockName)
        .value("ContainerNotEmpty", Acad::ErrorStatus::eContainerNotEmpty)
        .value("NullEntityPointer", Acad::ErrorStatus::eNullEntityPointer)
        .value("IllegalEntityType", Acad::ErrorStatus::eIllegalEntityType)
        .value("KeyNotFound", Acad::ErrorStatus::eKeyNotFound)
        .value("DuplicateKey", Acad::ErrorStatus::eDuplicateKey)
        .value("InvalidIndex", Acad::ErrorStatus::eInvalidIndex)
        .value("DuplicateIndex", Acad::ErrorStatus::eDuplicateIndex)
        .value("AlreadyInDb", Acad::ErrorStatus::eAlreadyInDb)
        .value("OutOfDisk", Acad::ErrorStatus::eOutOfDisk)
        .value("DeletedEntry", Acad::ErrorStatus::eDeletedEntry)
        .value("NegativeValueNotAllowed", Acad::ErrorStatus::eNegativeValueNotAllowed)
        .value("InvalidExtents", Acad::ErrorStatus::eInvalidExtents)
        .value("InvalidAdsName", Acad::ErrorStatus::eInvalidAdsName)
        .value("InvalidSymbolTableName", Acad::ErrorStatus::eInvalidSymbolTableName)
        .value("InvalidKey", Acad::ErrorStatus::eInvalidKey)
        .value("WrongObjectType", Acad::ErrorStatus::eWrongObjectType)
        .value("WrongDatabase", Acad::ErrorStatus::eWrongDatabase)
        .value("ObjectToBeDeleted", Acad::ErrorStatus::eObjectToBeDeleted)
        .value("InvalidDwgVersion", Acad::ErrorStatus::eInvalidDwgVersion)
        .value("AnonymousEntry", Acad::ErrorStatus::eAnonymousEntry)
        .value("IllegalReplacement", Acad::ErrorStatus::eIllegalReplacement)
        .value("EndOfObject", Acad::ErrorStatus::eEndOfObject)
        .value("EndOfFile", Acad::ErrorStatus::eEndOfFile)
        .value("IsReading", Acad::ErrorStatus::eIsReading)
        .value("IsWriting", Acad::ErrorStatus::eIsWriting)
        .value("NotOpenForRead", Acad::ErrorStatus::eNotOpenForRead)
        .value("NotOpenForWrite", Acad::ErrorStatus::eNotOpenForWrite)
        .value("NotThatKindOfClass", Acad::ErrorStatus::eNotThatKindOfClass)
        .value("InvalidBlockName", Acad::ErrorStatus::eInvalidBlockName)
        .value("MissingDxfField", Acad::ErrorStatus::eMissingDxfField)
        .value("DuplicateDxfField", Acad::ErrorStatus::eDuplicateDxfField)
        .value("InvalidDxfCode", Acad::ErrorStatus::eInvalidDxfCode)
        .value("InvalidResBuf", Acad::ErrorStatus::eInvalidResBuf)
        .value("BadDxfSequence", Acad::ErrorStatus::eBadDxfSequence)
        .value("FilerError", Acad::ErrorStatus::eFilerError)
        .value("VertexAfterFace", Acad::ErrorStatus::eVertexAfterFace)
        .value("InvalidFaceVertexIndex", Acad::ErrorStatus::eInvalidFaceVertexIndex)
        .value("InvalidMeshVertexIndex", Acad::ErrorStatus::eInvalidMeshVertexIndex)
        .value("OtherObjectsBusy", Acad::ErrorStatus::eOtherObjectsBusy)
        .value("MustFirstAddBlockToDb", Acad::ErrorStatus::eMustFirstAddBlockToDb)
        .value("CannotNestBlockDefs", Acad::ErrorStatus::eCannotNestBlockDefs)
        .value("DwgRecoveredOK", Acad::ErrorStatus::eDwgRecoveredOK)
        .value("DwgNotRecoverable", Acad::ErrorStatus::eDwgNotRecoverable)
        .value("DxfPartiallyRead", Acad::ErrorStatus::eDxfPartiallyRead)
        .value("DxfReadAborted", Acad::ErrorStatus::eDxfReadAborted)
        .value("DxbPartiallyRead", Acad::ErrorStatus::eDxbPartiallyRead)
        .value("DwgCRCDoesNotMatch", Acad::ErrorStatus::eDwgCRCDoesNotMatch)
        .value("DwgSentinelDoesNotMatch", Acad::ErrorStatus::eDwgSentinelDoesNotMatch)
        .value("DwgObjectImproperlyRead", Acad::ErrorStatus::eDwgObjectImproperlyRead)
        .value("NoInputFiler", Acad::ErrorStatus::eNoInputFiler)
        .value("DwgNeedsAFullSave", Acad::ErrorStatus::eDwgNeedsAFullSave)
        .value("DxbReadAborted", Acad::ErrorStatus::eDxbReadAborted)
        .value("FileLockedByACAD", Acad::ErrorStatus::eFileLockedByACAD)
        .value("FileAccessErr", Acad::ErrorStatus::eFileAccessErr)
        .value("FileSystemErr", Acad::ErrorStatus::eFileSystemErr)
        .value("FileInternalErr", Acad::ErrorStatus::eFileInternalErr)
        .value("FileTooManyOpen", Acad::ErrorStatus::eFileTooManyOpen)
        .value("FileNotFound", Acad::ErrorStatus::eFileNotFound)
        .value("DwkLockFileFound", Acad::ErrorStatus::eDwkLockFileFound)
        .value("WasErased", Acad::ErrorStatus::eWasErased)
        .value("PermanentlyErased", Acad::ErrorStatus::ePermanentlyErased)
        .value("WasOpenForRead", Acad::ErrorStatus::eWasOpenForRead)
        .value("WasOpenForWrite", Acad::ErrorStatus::eWasOpenForWrite)
        .value("WasOpenForUndo", Acad::ErrorStatus::eWasOpenForUndo)
        .value("WasNotifying", Acad::ErrorStatus::eWasNotifying)
        .value("WasOpenForNotify", Acad::ErrorStatus::eWasOpenForNotify)
        .value("OnLockedLayer", Acad::ErrorStatus::eOnLockedLayer)
        .value("MustOpenThruOwner", Acad::ErrorStatus::eMustOpenThruOwner)
        .value("SubentitiesStillOpen", Acad::ErrorStatus::eSubentitiesStillOpen)
        .value("AtMaxReaders", Acad::ErrorStatus::eAtMaxReaders)
        .value("IsWriteProtected", Acad::ErrorStatus::eIsWriteProtected)
        .value("IsXRefObject", Acad::ErrorStatus::eIsXRefObject)
        .value("NotAnEntity", Acad::ErrorStatus::eNotAnEntity)
        .value("HadMultipleReaders", Acad::ErrorStatus::eHadMultipleReaders)
        .value("DuplicateRecordName", Acad::ErrorStatus::eDuplicateRecordName)
        .value("XRefDependent", Acad::ErrorStatus::eXRefDependent)
        .value("SelfReference", Acad::ErrorStatus::eSelfReference)
        .value("MissingSymbolTable", Acad::ErrorStatus::eMissingSymbolTable)
        .value("MissingSymbolTableRec", Acad::ErrorStatus::eMissingSymbolTableRec)
        .value("WasNotOpenForWrite", Acad::ErrorStatus::eWasNotOpenForWrite)
        .value("CloseWasNotifying", Acad::ErrorStatus::eCloseWasNotifying)
        .value("CloseModifyAborted", Acad::ErrorStatus::eCloseModifyAborted)
        .value("ClosePartialFailure", Acad::ErrorStatus::eClosePartialFailure)
        .value("CloseFailObjectDamaged", Acad::ErrorStatus::eCloseFailObjectDamaged)
        .value("CannotBeErasedByCaller", Acad::ErrorStatus::eCannotBeErasedByCaller)
        .value("CannotBeResurrected", Acad::ErrorStatus::eCannotBeResurrected)
        .value("WasNotErased", Acad::ErrorStatus::eWasNotErased)
        .value("InsertAfter", Acad::ErrorStatus::eInsertAfter)
        .value("FixedAllErrors", Acad::ErrorStatus::eFixedAllErrors)
        .value("LeftErrorsUnfixed", Acad::ErrorStatus::eLeftErrorsUnfixed)
        .value("UnrecoverableErrors", Acad::ErrorStatus::eUnrecoverableErrors)
        .value("NoDatabase", Acad::ErrorStatus::eNoDatabase)
        .value("XdataSizeExceeded", Acad::ErrorStatus::eXdataSizeExceeded)
        .value("RegappIdNotFound", Acad::ErrorStatus::eRegappIdNotFound)
        .value("RepeatEntity", Acad::ErrorStatus::eRepeatEntity)
        .value("RecordNotInTable", Acad::ErrorStatus::eRecordNotInTable)
        .value("IteratorDone", Acad::ErrorStatus::eIteratorDone)
        .value("NullIterator", Acad::ErrorStatus::eNullIterator)
        .value("NotInBlock", Acad::ErrorStatus::eNotInBlock)
        .value("OwnerNotInDatabase", Acad::ErrorStatus::eOwnerNotInDatabase)
        .value("OwnerNotOpenForRead", Acad::ErrorStatus::eOwnerNotOpenForRead)
        .value("OwnerNotOpenForWrite", Acad::ErrorStatus::eOwnerNotOpenForWrite)
        .value("ExplodeBeforeTransform", Acad::ErrorStatus::eExplodeBeforeTransform)
        .value("CannotScaleNonUniformly", Acad::ErrorStatus::eCannotScaleNonUniformly)
        .value("NotInDatabase", Acad::ErrorStatus::eNotInDatabase)
        .value("NotCurrentDatabase", Acad::ErrorStatus::eNotCurrentDatabase)
        .value("IsAnEntity", Acad::ErrorStatus::eIsAnEntity)
        .value("CannotChangeActiveViewport", Acad::ErrorStatus::eCannotChangeActiveViewport)
        .value("NotInPaperspace", Acad::ErrorStatus::eNotInPaperspace)
        .value("CommandWasInProgress", Acad::ErrorStatus::eCommandWasInProgress)
        .value("GeneralModelingFailure", Acad::ErrorStatus::eGeneralModelingFailure)
        .value("OutOfRange", Acad::ErrorStatus::eOutOfRange)
        .value("NonCoplanarGeometry", Acad::ErrorStatus::eNonCoplanarGeometry)
        .value("DegenerateGeometry", Acad::ErrorStatus::eDegenerateGeometry)
        .value("InvalidAxis", Acad::ErrorStatus::eInvalidAxis)
        .value("PointNotOnEntity", Acad::ErrorStatus::ePointNotOnEntity)
        .value("SingularPoint", Acad::ErrorStatus::eSingularPoint)
        .value("InvalidOffset", Acad::ErrorStatus::eInvalidOffset)
        .value("NonPlanarEntity", Acad::ErrorStatus::eNonPlanarEntity)
        .value("CannotExplodeEntity", Acad::ErrorStatus::eCannotExplodeEntity)
        .value("StringTooLong", Acad::ErrorStatus::eStringTooLong)
        .value("InvalidSymTableFlag", Acad::ErrorStatus::eInvalidSymTableFlag)
        .value("UndefinedLineType", Acad::ErrorStatus::eUndefinedLineType)
        .value("InvalidTextStyle", Acad::ErrorStatus::eInvalidTextStyle)
        .value("TooFewLineTypeElements", Acad::ErrorStatus::eTooFewLineTypeElements)
        .value("TooManyLineTypeElements", Acad::ErrorStatus::eTooManyLineTypeElements)
        .value("ExcessiveItemCount", Acad::ErrorStatus::eExcessiveItemCount)
        .value("IgnoredLinetypeRedef", Acad::ErrorStatus::eIgnoredLinetypeRedef)
        .value("BadUCS", Acad::ErrorStatus::eBadUCS)
        .value("BadPaperspaceView", Acad::ErrorStatus::eBadPaperspaceView)
        .value("SomeInputDataLeftUnread", Acad::ErrorStatus::eSomeInputDataLeftUnread)
        .value("NoInternalSpace", Acad::ErrorStatus::eNoInternalSpace)
        .value("InvalidDimStyle", Acad::ErrorStatus::eInvalidDimStyle)
        .value("InvalidLayer", Acad::ErrorStatus::eInvalidLayer)
        .value("UserBreak", Acad::ErrorStatus::eUserBreak)
        .value("UserUnloaded", Acad::ErrorStatus::eUserUnloaded)
        .value("UserUnloaded", Acad::ErrorStatus::eUserUnloaded)
        .value("DeleteEntity", Acad::ErrorStatus::eDeleteEntity)
        .value("InvalidFix", Acad::ErrorStatus::eInvalidFix)
        .value("FSMError", Acad::ErrorStatus::eFSMError)
        .value("BadLayerName", Acad::ErrorStatus::eBadLayerName)
        .value("LayerGroupCodeMissing", Acad::ErrorStatus::eLayerGroupCodeMissing)
        .value("BadColorIndex", Acad::ErrorStatus::eBadColorIndex)
        .value("BadLinetypeName", Acad::ErrorStatus::eBadLinetypeName)
        .value("BadLinetypeScale", Acad::ErrorStatus::eBadLinetypeScale)
        .value("BadVisibilityValue", Acad::ErrorStatus::eBadVisibilityValue)
        .value("ProperClassSeparatorExpected", Acad::ErrorStatus::eProperClassSeparatorExpected)
        .value("BadLineWeightValue", Acad::ErrorStatus::eBadLineWeightValue)
        .value("BadColor", Acad::ErrorStatus::eBadColor)
        .value("BadMaterialName", Acad::ErrorStatus::eBadMaterialName)
        .value("PagerError", Acad::ErrorStatus::ePagerError)
        .value("OutOfPagerMemory", Acad::ErrorStatus::eOutOfPagerMemory)
        .value("PagerWriteError", Acad::ErrorStatus::ePagerWriteError)
        .value("WasNotForwarding", Acad::ErrorStatus::eWasNotForwarding)
        .value("InvalidIdMap", Acad::ErrorStatus::eInvalidIdMap)
        .value("InvalidOwnerObject", Acad::ErrorStatus::eInvalidOwnerObject)
        .value("OwnerNotSet", Acad::ErrorStatus::eOwnerNotSet)
        .value("WrongSubentityType", Acad::ErrorStatus::eWrongSubentityType)
        .value("TooManyVertices", Acad::ErrorStatus::eTooManyVertices)
        .value("TooFewVertices", Acad::ErrorStatus::eTooFewVertices)
        .value("NoActiveTransactions", Acad::ErrorStatus::eNoActiveTransactions)
        .value("NotTopTransaction", Acad::ErrorStatus::eNotTopTransaction)
        .value("TransactionOpenWhileCommandEnded", Acad::ErrorStatus::eTransactionOpenWhileCommandEnded)
        .value("InProcessOfCommitting", Acad::ErrorStatus::eInProcessOfCommitting)
        .value("NotNewlyCreated", Acad::ErrorStatus::eNotNewlyCreated)
        .value("LongTransReferenceError", Acad::ErrorStatus::eLongTransReferenceError)
        .value("NoWorkSet", Acad::ErrorStatus::eNoWorkSet)
        .value("AlreadyInGroup", Acad::ErrorStatus::eAlreadyInGroup)
        .value("NotInGroup", Acad::ErrorStatus::eNotInGroup)
        .value("AlreadyInferred", Acad::ErrorStatus::eAlreadyInferred)
        .value("InvalidREFIID", Acad::ErrorStatus::eInvalidREFIID)
        .value("InvalidNormal", Acad::ErrorStatus::eInvalidNormal)
        .value("InvalidStyle", Acad::ErrorStatus::eInvalidStyle)
        .value("CannotRestoreFromAcisFile", Acad::ErrorStatus::eCannotRestoreFromAcisFile)
        .value("MakeMeProxy", Acad::ErrorStatus::eMakeMeProxy)
        .value("NLSFileNotAvailable", Acad::ErrorStatus::eNLSFileNotAvailable)
        .value("NotAllowedForThisProxy", Acad::ErrorStatus::eNotAllowedForThisProxy)
        .value("NotClonedPrimaryProxy", Acad::ErrorStatus::eNotClonedPrimaryProxy)
        .value("NotSupportedInDwgApi", Acad::ErrorStatus::eNotSupportedInDwgApi)
        .value("PolyWidthLost", Acad::ErrorStatus::ePolyWidthLost)
        .value("NullExtents", Acad::ErrorStatus::eNullExtents)
        .value("BadDwgHeader", Acad::ErrorStatus::eBadDwgHeader)
        .value("LockViolation", Acad::ErrorStatus::eLockViolation)
        .value("LockConflict", Acad::ErrorStatus::eLockConflict)
        .value("DatabaseObjectsOpen", Acad::ErrorStatus::eDatabaseObjectsOpen)
        .value("LockChangeInProgress", Acad::ErrorStatus::eLockChangeInProgress)
        .value("Vetoed", Acad::ErrorStatus::eVetoed)
        .value("NoDocument", Acad::ErrorStatus::eNoDocument)
        .value("NotFromThisDocument", Acad::ErrorStatus::eNotFromThisDocument)
        .value("LISPActive", Acad::ErrorStatus::eLISPActive)
        .value("TargetDocNotQuiescent", Acad::ErrorStatus::eTargetDocNotQuiescent)
        .value("DocumentSwitchDisabled", Acad::ErrorStatus::eDocumentSwitchDisabled)
        .value("InvalidContext", Acad::ErrorStatus::eInvalidContext)
        .value("CreateFailed", Acad::ErrorStatus::eCreateFailed)
        .value("CreateInvalidName", Acad::ErrorStatus::eCreateInvalidName)
        .value("SetFailed", Acad::ErrorStatus::eSetFailed)
        .value("DelDoesNotExist", Acad::ErrorStatus::eDelDoesNotExist)
        .value("DelIsModelSpace", Acad::ErrorStatus::eDelIsModelSpace)
        .value("DelLastLayout", Acad::ErrorStatus::eDelLastLayout)
        .value("DelUnableToSetCurrent", Acad::ErrorStatus::eDelUnableToSetCurrent)
        .value("DelUnableToFind", Acad::ErrorStatus::eDelUnableToFind)
        .value("RenameDoesNotExist", Acad::ErrorStatus::eRenameDoesNotExist)
        .value("RenameIsModelSpace", Acad::ErrorStatus::eRenameIsModelSpace)
        .value("RenameInvalidLayoutName", Acad::ErrorStatus::eRenameInvalidLayoutName)
        .value("RenameLayoutAlreadyExists", Acad::ErrorStatus::eRenameLayoutAlreadyExists)
        .value("RenameInvalidName", Acad::ErrorStatus::eRenameInvalidName)
        .value("CopyDoesNotExist", Acad::ErrorStatus::eCopyDoesNotExist)
        .value("CopyIsModelSpace", Acad::ErrorStatus::eCopyIsModelSpace)
        .value("CopyFailed", Acad::ErrorStatus::eCopyFailed)
        .value("CopyInvalidName", Acad::ErrorStatus::eCopyInvalidName)
        .value("CopyNameExists", Acad::ErrorStatus::eCopyNameExists)
        .value("ProfileDoesNotExist", Acad::ErrorStatus::eProfileDoesNotExist)
        .value("InvalidFileExtension", Acad::ErrorStatus::eInvalidFileExtension)
        .value("InvalidProfileName", Acad::ErrorStatus::eInvalidProfileName)
        .value("FileExists", Acad::ErrorStatus::eFileExists)
        .value("ProfileIsInUse", Acad::ErrorStatus::eProfileIsInUse)
        .value("CantOpenFile", Acad::ErrorStatus::eCantOpenFile)
        .value("NoFileName", Acad::ErrorStatus::eNoFileName)
        .value("RegistryAccessError", Acad::ErrorStatus::eRegistryAccessError)
        .value("RegistryCreateError", Acad::ErrorStatus::eRegistryCreateError)
        .value("BadDxfFile", Acad::ErrorStatus::eBadDxfFile)
        .value("UnknownDxfFileFormat", Acad::ErrorStatus::eUnknownDxfFileFormat)
        .value("MissingDxfSection", Acad::ErrorStatus::eMissingDxfSection)
        .value("InvalidDxfSectionName", Acad::ErrorStatus::eInvalidDxfSectionName)
        .value("NotDxfHeaderGroupCode", Acad::ErrorStatus::eNotDxfHeaderGroupCode)
        .value("UndefinedDxfGroupCode", Acad::ErrorStatus::eUndefinedDxfGroupCode)
        .value("NotInitializedYet", Acad::ErrorStatus::eNotInitializedYet)
        .value("InvalidDxf2dPoint", Acad::ErrorStatus::eInvalidDxf2dPoint)
        .value("InvalidDxf3dPoint", Acad::ErrorStatus::eInvalidDxf3dPoint)
        .value("BadlyNestedAppData", Acad::ErrorStatus::eBadlyNestedAppData)
        .value("IncompleteBlockDefinition", Acad::ErrorStatus::eIncompleteBlockDefinition)
        .value("IncompleteComplexObject", Acad::ErrorStatus::eIncompleteComplexObject)
        .value("BlockDefInEntitySection", Acad::ErrorStatus::eBlockDefInEntitySection)
        .value("NoBlockBegin", Acad::ErrorStatus::eNoBlockBegin)
        .value("DuplicateLayerName", Acad::ErrorStatus::eDuplicateLayerName)
        .value("BadPlotStyleName", Acad::ErrorStatus::eBadPlotStyleName)
        .value("DuplicateBlockName", Acad::ErrorStatus::eDuplicateBlockName)
        .value("BadPlotStyleType", Acad::ErrorStatus::eBadPlotStyleType)
        .value("BadPlotStyleNameHandle", Acad::ErrorStatus::eBadPlotStyleNameHandle)
        .value("UndefineShapeName", Acad::ErrorStatus::eUndefineShapeName)
        .value("DuplicateBlockDefinition", Acad::ErrorStatus::eDuplicateBlockDefinition)
        .value("MissingBlockName", Acad::ErrorStatus::eMissingBlockName)
        .value("BinaryDataSizeExceeded", Acad::ErrorStatus::eBinaryDataSizeExceeded)
        .value("ObjectIsReferenced", Acad::ErrorStatus::eObjectIsReferenced)
        .value("NoThumbnailBitmap", Acad::ErrorStatus::eNoThumbnailBitmap)
        .value("GuidNoAddress", Acad::ErrorStatus::eGuidNoAddress)
        .value("MustBe0to2", Acad::ErrorStatus::eMustBe0to2)
        .value("MustBe0to3", Acad::ErrorStatus::eMustBe0to3)
        .value("MustBe0to4", Acad::ErrorStatus::eMustBe0to4)
        .value("MustBe0to5", Acad::ErrorStatus::eMustBe0to5)
        .value("MustBe0to8", Acad::ErrorStatus::eMustBe0to8)
        .value("MustBe1to8", Acad::ErrorStatus::eMustBe1to8)
        .value("MustBe1to15", Acad::ErrorStatus::eMustBe1to15)
        .value("MustBePositive", Acad::ErrorStatus::eMustBePositive)
        .value("MustBeNonNegative", Acad::ErrorStatus::eMustBeNonNegative)
        .value("MustBeNonZero", Acad::ErrorStatus::eMustBeNonZero)
        .value("MustBe1to6", Acad::ErrorStatus::eMustBe1to6)
        .value("NoPlotStyleTranslationTable", Acad::ErrorStatus::eNoPlotStyleTranslationTable)
        .value("PlotStyleInColorDependentMode", Acad::ErrorStatus::ePlotStyleInColorDependentMode)
        .value("MaxLayouts", Acad::ErrorStatus::eMaxLayouts)
        .value("NoClassId", Acad::ErrorStatus::eNoClassId)
        .value("UndoOperationNotAvailable", Acad::ErrorStatus::eUndoOperationNotAvailable)
        .value("UndoNoGroupBegin", Acad::ErrorStatus::eUndoNoGroupBegin)
        .value("HatchTooDense", Acad::ErrorStatus::eHatchTooDense)
        .value("OpenFileCancelled", Acad::ErrorStatus::eOpenFileCancelled)
        .value("NotHandled", Acad::ErrorStatus::eNotHandled)
        .value("MakeMeProxyAndResurrect", Acad::ErrorStatus::eMakeMeProxyAndResurrect)
        .value("FileSharingViolation", Acad::ErrorStatus::eFileSharingViolation)
        .value("UnsupportedFileFormat", Acad::ErrorStatus::eUnsupportedFileFormat)
        .value("ObsoleteFileFormat", Acad::ErrorStatus::eObsoleteFileFormat)
        .value("FileMissingSections", Acad::ErrorStatus::eFileMissingSections)
        .value("RepeatedDwgRead", Acad::ErrorStatus::eRepeatedDwgRead)
        .value("SilentOpenFileCancelled", Acad::ErrorStatus::eSilentOpenFileCancelled)
        .value("WrongCellType", Acad::ErrorStatus::eWrongCellType)
        .value("CannotChangeColumnType", Acad::ErrorStatus::eCannotChangeColumnType)
        .value("RowsMustMatchColumns", Acad::ErrorStatus::eRowsMustMatchColumns)
        .value("NullNodeId", Acad::ErrorStatus::eNullNodeId)
        .value("NoNodeActive", Acad::ErrorStatus::eNoNodeActive)
        .value("GraphContainsProxies", Acad::ErrorStatus::eGraphContainsProxies)
        .value("DwgShareDemandLoad", Acad::ErrorStatus::eDwgShareDemandLoad)
        .value("DwgShareReadAccess", Acad::ErrorStatus::eDwgShareReadAccess)
        .value("DwgShareWriteAccess", Acad::ErrorStatus::eDwgShareWriteAccess)
        .value("LoadFailed", Acad::ErrorStatus::eLoadFailed)
        .value("DeviceNotFound", Acad::ErrorStatus::eDeviceNotFound)
        .value("NoCurrentConfig", Acad::ErrorStatus::eNoCurrentConfig)
        .value("NullPtr", Acad::ErrorStatus::eNullPtr)
        .value("NoLayout", Acad::ErrorStatus::eNoLayout)
        .value("IncompatiblePlotSettings", Acad::ErrorStatus::eIncompatiblePlotSettings)
        .value("NonePlotDevice", Acad::ErrorStatus::eNonePlotDevice)
        .value("NoMatchingMedia", Acad::ErrorStatus::eNoMatchingMedia)
        .value("InvalidView", Acad::ErrorStatus::eInvalidView)
        .value("InvalidWindowArea", Acad::ErrorStatus::eInvalidWindowArea)
        .value("InvalidPlotArea", Acad::ErrorStatus::eInvalidPlotArea)
        .value("CustomSizeNotPossible", Acad::ErrorStatus::eCustomSizeNotPossible)
        .value("PageCancelled", Acad::ErrorStatus::ePageCancelled)
        .value("PlotCancelled", Acad::ErrorStatus::ePlotCancelled)
        .value("InvalidEngineState", Acad::ErrorStatus::eInvalidEngineState)
        .value("PlotAlreadyStarted", Acad::ErrorStatus::ePlotAlreadyStarted)
        .value("NoErrorHandler", Acad::ErrorStatus::eNoErrorHandler)
        .value("InvalidPlotInfo", Acad::ErrorStatus::eInvalidPlotInfo)
        .value("NumberOfCopiesNotSupported", Acad::ErrorStatus::eNumberOfCopiesNotSupported)
        .value("LayoutNotCurrent", Acad::ErrorStatus::eLayoutNotCurrent)
        .value("GraphicsNotGenerated", Acad::ErrorStatus::eGraphicsNotGenerated)
        .value("CannotPlotToFile", Acad::ErrorStatus::eCannotPlotToFile)
        .value("MustPlotToFile", Acad::ErrorStatus::eMustPlotToFile)
        .value("NotMultiPageCapable", Acad::ErrorStatus::eNotMultiPageCapable)
        .value("BackgroundPlotInProgress", Acad::ErrorStatus::eBackgroundPlotInProgress)
        .value("NotShownInPropertyPalette", Acad::ErrorStatus::eNotShownInPropertyPalette)
        .value("SubSelectionSetEmpty", Acad::ErrorStatus::eSubSelectionSetEmpty)
        .value("NoIntersections", Acad::ErrorStatus::eNoIntersections)
        .value("EmbeddedIntersections", Acad::ErrorStatus::eEmbeddedIntersections)
        .value("NoOverride", Acad::ErrorStatus::eNoOverride)
        .value("NoStoredOverrides", Acad::ErrorStatus::eNoStoredOverrides)
        .value("UnableToRetrieveOverrides", Acad::ErrorStatus::eUnableToRetrieveOverrides)
        .value("UnableToStoreOverrides", Acad::ErrorStatus::eUnableToStoreOverrides)
        .value("UnableToRemoveOverrides", Acad::ErrorStatus::eUnableToRemoveOverrides)
        .value("NoStoredReconcileStatus", Acad::ErrorStatus::eNoStoredReconcileStatus)
        .value("UnableToStoreReconcileStatus", Acad::ErrorStatus::eUnableToStoreReconcileStatus)
        .value("InvalidObjectId", Acad::ErrorStatus::eInvalidObjectId)
        .value("InvalidXrefObjectId", Acad::ErrorStatus::eInvalidXrefObjectId)
        .value("NoViewAssociation", Acad::ErrorStatus::eNoViewAssociation)
        .value("NoLabelBlock", Acad::ErrorStatus::eNoLabelBlock)
        .value("UnableToSetViewAssociation", Acad::ErrorStatus::eUnableToSetViewAssociation)
        .value("UnableToGetViewAssociation", Acad::ErrorStatus::eUnableToGetViewAssociation)
        .value("UnableToSetLabelBlock", Acad::ErrorStatus::eUnableToSetLabelBlock)
        .value("UnableToGetLabelBlock", Acad::ErrorStatus::eUnableToGetLabelBlock)
        .value("UnableToRemoveAssociation ", Acad::ErrorStatus::eUnableToRemoveAssociation)
        .value("UnableToSyncModelView", Acad::ErrorStatus::eUnableToSyncModelView)
        .value("DataLinkAdapterNotFound", Acad::ErrorStatus::eDataLinkAdapterNotFound)
        .value("DataLinkInvalidAdapterId", Acad::ErrorStatus::eDataLinkInvalidAdapterId)
        .value("DataLinkNotFound", Acad::ErrorStatus::eDataLinkNotFound)
        .value("DataLinkBadConnectionString", Acad::ErrorStatus::eDataLinkBadConnectionString)
        .value("DataLinkNotUpdatedYet", Acad::ErrorStatus::eDataLinkNotUpdatedYet)
        .value("DataLinkSourceNotFound", Acad::ErrorStatus::eDataLinkSourceNotFound)
        .value("DataLinkConnectionFailed", Acad::ErrorStatus::eDataLinkConnectionFailed)
        .value("DataLinkSourceUpdateNotAllowed", Acad::ErrorStatus::eDataLinkSourceUpdateNotAllowed)
        .value("DataLinkSourceIsWriteProtected", Acad::ErrorStatus::eDataLinkSourceIsWriteProtected)
        .value("DataLinkExcelNotFound", Acad::ErrorStatus::eDataLinkExcelNotFound)
        .value("DataLinkOtherError", Acad::ErrorStatus::eDataLinkOtherError)
        .value("XrefReloaded", Acad::ErrorStatus::eXrefReloaded)
        .value("XrefReloadImpossibleAtThisTime", Acad::ErrorStatus::eXrefReloadImpossibleAtThisTime)
        .value("SecInitializationFailure", Acad::ErrorStatus::eSecInitializationFailure)
        .value("SecErrorReadingFile", Acad::ErrorStatus::eSecErrorReadingFile)
        .value("SecErrorWritingFile", Acad::ErrorStatus::eSecErrorWritingFile)
        .value("SecInvalidDigitalID", Acad::ErrorStatus::eSecInvalidDigitalID)
        .value("SecErrorGeneratingTimestamp", Acad::ErrorStatus::eSecErrorGeneratingTimestamp)
        .value("SecErrorComputingSignature", Acad::ErrorStatus::eSecErrorComputingSignature)
        .value("SecErrorWritingSignature", Acad::ErrorStatus::eSecErrorWritingSignature)
        .value("SecErrorEncryptingData", Acad::ErrorStatus::eSecErrorEncryptingData)
        .value("SecErrorCipherNotSupported", Acad::ErrorStatus::eSecErrorCipherNotSupported)
        .value("SecErrorDecryptingData", Acad::ErrorStatus::eSecErrorDecryptingData)
        .value("NoAcDbHostApplication", Acad::ErrorStatus::eNoAcDbHostApplication)
        .value("NoUnderlayHost", Acad::ErrorStatus::eNoUnderlayHost)
        .value("PCUnknown", Acad::ErrorStatus::ePCUnknown)
        .value("PCLargeData", Acad::ErrorStatus::ePCLargeData)
        .value("PCUnknownFileType", Acad::ErrorStatus::ePCUnknownFileType)
        .value("PCFileNotFound", Acad::ErrorStatus::ePCFileNotFound)
        .value("PCFileNotCreated", Acad::ErrorStatus::ePCFileNotCreated)
        .value("PCFileNotOpened", Acad::ErrorStatus::ePCFileNotOpened)
        .value("PCFileNotClosed", Acad::ErrorStatus::ePCFileNotClosed)
        .value("PCFileNotWritten", Acad::ErrorStatus::ePCFileNotWritten)
        .value("PCFileWrongFormat", Acad::ErrorStatus::ePCFileWrongFormat)
        .value("PCFileDataSelectorInvalid", Acad::ErrorStatus::ePCFileDataSelectorInvalid)
        .value("PCCoordSysReprojectFail", Acad::ErrorStatus::ePCCoordSysReprojectFail)
        .value("PCDiskSpaceTooSmall", Acad::ErrorStatus::ePCDiskSpaceTooSmall)
        .value("PCThreadTerminated", Acad::ErrorStatus::ePCThreadTerminated)
        .value("PCFileNotErased", Acad::ErrorStatus::ePCFileNotErased)
        .value("PCCoordSysAssignFail", Acad::ErrorStatus::ePCCoordSysAssignFail)
        .value("PCLastImporterUnfinished", Acad::ErrorStatus::ePCLastImporterUnfinished)
        .value("PCNoEngineInfo", Acad::ErrorStatus::ePCNoEngineInfo)
        .value("PCInProgress", Acad::ErrorStatus::ePCInProgress)
        .value("InetBase", Acad::ErrorStatus::eInetBase)
        .value("InetOk", Acad::ErrorStatus::eInetOk)
        .value("InetInCache", Acad::ErrorStatus::eInetInCache)
        .value("InetFileNotFound", Acad::ErrorStatus::eInetFileNotFound)
        .value("InetBadPath", Acad::ErrorStatus::eInetBadPath)
        .value("InetTooManyOpenFiles", Acad::ErrorStatus::eInetTooManyOpenFiles)
        .value("InetFileAccessDenied", Acad::ErrorStatus::eInetFileAccessDenied)
        .value("InetInvalidFileHandle", Acad::ErrorStatus::eInetInvalidFileHandle)
        .value("InetDirectoryFull", Acad::ErrorStatus::eInetDirectoryFull)
        .value("InetHardwareError", Acad::ErrorStatus::eInetHardwareError)
        .value("InetSharingViolation", Acad::ErrorStatus::eInetSharingViolation)
        .value("InetDiskFull", Acad::ErrorStatus::eInetDiskFull)
        .value("InetFileGenericError", Acad::ErrorStatus::eInetFileGenericError)
        .value("InetValidURL", Acad::ErrorStatus::eInetValidURL)
        .value("InetNotAnURL", Acad::ErrorStatus::eInetNotAnURL)
        .value("InetNoWinInet", Acad::ErrorStatus::eInetNoWinInet)
        .value("InetOldWinInet", Acad::ErrorStatus::eInetOldWinInet)
        .value("InetNoAcadInet", Acad::ErrorStatus::eInetNoAcadInet)
        .value("InetNotImplemented", Acad::ErrorStatus::eInetNotImplemented)
        .value("InetProtocolNotSupported", Acad::ErrorStatus::eInetProtocolNotSupported)
        .value("InetCreateInternetSessionFailed", Acad::ErrorStatus::eInetCreateInternetSessionFailed)
        .value("InetInternetSessionConnectFailed", Acad::ErrorStatus::eInetInternetSessionConnectFailed)
        .value("InetInternetSessionOpenFailed", Acad::ErrorStatus::eInetInternetSessionOpenFailed)
        .value("InetInvalidAccessType", Acad::ErrorStatus::eInetInvalidAccessType)
        .value("InetFileOpenFailed", Acad::ErrorStatus::eInetFileOpenFailed)
        .value("InetHttpOpenRequestFailed", Acad::ErrorStatus::eInetHttpOpenRequestFailed)
        .value("InetUserCancelledTransfer", Acad::ErrorStatus::eInetUserCancelledTransfer)
        .value("InetHttpBadRequest", Acad::ErrorStatus::eInetHttpBadRequest)
        .value("InetHttpAccessDenied", Acad::ErrorStatus::eInetHttpAccessDenied)
        .value("InetHttpPaymentRequired", Acad::ErrorStatus::eInetHttpPaymentRequired)
        .value("InetHttpRequestForbidden", Acad::ErrorStatus::eInetHttpRequestForbidden)
        .value("InetHttpObjectNotFound", Acad::ErrorStatus::eInetHttpObjectNotFound)
        .value("InetHttpBadMethod", Acad::ErrorStatus::eInetHttpBadMethod)
        .value("InetHttpNoAcceptableResponse", Acad::ErrorStatus::eInetHttpNoAcceptableResponse)
        .value("InetHttpProxyAuthorizationRequired", Acad::ErrorStatus::eInetHttpProxyAuthorizationRequired)
        .value("InetHttpTimedOut", Acad::ErrorStatus::eInetHttpTimedOut)
        .value("InetHttpConflict", Acad::ErrorStatus::eInetHttpConflict)
        .value("InetHttpResourceGone", Acad::ErrorStatus::eInetHttpResourceGone)
        .value("InetHttpLengthRequired", Acad::ErrorStatus::eInetHttpLengthRequired)
        .value("InetHttpPreconditionFailure", Acad::ErrorStatus::eInetHttpPreconditionFailure)
        .value("InetHttpRequestTooLarge", Acad::ErrorStatus::eInetHttpRequestTooLarge)
        .value("InetHttpUriTooLong", Acad::ErrorStatus::eInetHttpUriTooLong)
        .value("InetHttpUnsupportedMedia", Acad::ErrorStatus::eInetHttpUnsupportedMedia)
        .value("InetHttpServerError", Acad::ErrorStatus::eInetHttpServerError)
        .value("InetHttpNotSupported", Acad::ErrorStatus::eInetHttpNotSupported)
        .value("InetHttpBadGateway", Acad::ErrorStatus::eInetHttpBadGateway)
        .value("InetHttpServiceUnavailable", Acad::ErrorStatus::eInetHttpServiceUnavailable)
        .value("InetHttpGatewayTimeout", Acad::ErrorStatus::eInetHttpGatewayTimeout)
        .value("InetHttpVersionNotSupported", Acad::ErrorStatus::eInetHttpVersionNotSupported)
        .value("InetInternetError", Acad::ErrorStatus::eInetInternetError)
        .value("InetGenericException", Acad::ErrorStatus::eInetGenericException)
        .value("InetUnknownError", Acad::ErrorStatus::eInetUnknownError)
        .value("AlreadyActive", Acad::ErrorStatus::eAlreadyActive)
        .value("AlreadyInactive", Acad::ErrorStatus::eAlreadyInactive)
        .value("GraphEdgeNotFound", Acad::ErrorStatus::eGraphEdgeNotFound)
        .value("GraphNodeNotFound", Acad::ErrorStatus::eGraphNodeNotFound)
        .value("GraphNodeAlreadyExists", Acad::ErrorStatus::eGraphNodeAlreadyExists)
        .value("GraphEdgeAlreadyExists", Acad::ErrorStatus::eGraphEdgeAlreadyExists)
        .value("GraphCyclesFound", Acad::ErrorStatus::eGraphCyclesFound)
        .value("AlreadyHasRepresentation", Acad::ErrorStatus::eAlreadyHasRepresentation)
        .value("NoRepresentation", Acad::ErrorStatus::eNoRepresentation)
        .value("FailedToSetEdgeChamfers", Acad::ErrorStatus::eFailedToSetEdgeChamfers)
        .value("NoConnectedBlendSet", Acad::ErrorStatus::eNoConnectedBlendSet)
        .value("FailedToBlend", Acad::ErrorStatus::eFailedToBlend)
        .value("FailedToSetEdgeRounds", Acad::ErrorStatus::eFailedToSetEdgeRounds)
        .value("FailedToSetVertexRounds", Acad::ErrorStatus::eFailedToSetVertexRounds)
        .value("VSNotFound", Acad::ErrorStatus::eVSNotFound)
        .value("VSTrue", Acad::ErrorStatus::eVSTrue)
        .value("VSFalse", Acad::ErrorStatus::eVSFalse)
        .value("VSAlreadyExists", Acad::ErrorStatus::eVSAlreadyExists)
        .value("VSOneOffCreated", Acad::ErrorStatus::eVSOneOffCreated)
        .value("VSAPIOnlyValues", Acad::ErrorStatus::eVSAPIOnlyValues)
        .value("VSIsInUse", Acad::ErrorStatus::eVSIsInUse)
        .value("VSIsAcadDefault", Acad::ErrorStatus::eVSIsAcadDefault)
        .value("EmptyOperand", Acad::ErrorStatus::eEmptyOperand)
        .value("NoEntitiesFromPersistentIds", Acad::ErrorStatus::eNoEntitiesFromPersistentIds)
        .value("FailedCurveCheck", Acad::ErrorStatus::eFailedCurveCheck)
        .value("MaxNodes", Acad::ErrorStatus::eMaxNodes)
        .value("FailedToEvaluate", Acad::ErrorStatus::eFailedToEvaluate)
        .value("FailedToEvaluateDependents", Acad::ErrorStatus::eFailedToEvaluateDependents)
        .value("InvalidExpression", Acad::ErrorStatus::eInvalidExpression)
        .value("CyclicDependency", Acad::ErrorStatus::eCyclicDependency)
        .value("InconsistentConstraint", Acad::ErrorStatus::eInconsistentConstraint)
        .value("OverDefinedConstraint", Acad::ErrorStatus::eOverDefinedConstraint)
        .value("AllInSameRigidSet", Acad::ErrorStatus::eAllInSameRigidSet)
        .value("InvalidParameterName", Acad::ErrorStatus::eInvalidParameterName)
        .value("ReferencedInEquation", Acad::ErrorStatus::eReferencedInEquation)
        .value("EntityRestricedInDOF", Acad::ErrorStatus::eEntityRestricedInDOF)
        .value("DataTooLarge", Acad::ErrorStatus::eDataTooLarge)
        .value("NearSizeLimit", Acad::ErrorStatus::eNearSizeLimit)
        .value("StringNotAllowedInExpression", Acad::ErrorStatus::eStringNotAllowedInExpression)
        .value("TooManyActiveCommands", Acad::ErrorStatus::eTooManyActiveCommands)
        .value("UnableToTrimLastPiece", Acad::ErrorStatus::eUnableToTrimLastPiece)
        .value("UnableToTrimSurface", Acad::ErrorStatus::eUnableToTrimSurface)
        .value("ModifyingAssociativeEntity", Acad::ErrorStatus::eModifyingAssociativeEntity)
        .value("ModifyingDimensionWithExpression", Acad::ErrorStatus::eModifyingDimensionWithExpression)
        .value("DependentOnObjectErased", Acad::ErrorStatus::eDependentOnObjectErased)
        .value("SelfIntersecting", Acad::ErrorStatus::eSelfIntersecting)
        .value("NotOnBoundary", Acad::ErrorStatus::eNotOnBoundary)
        .value("NotConnected", Acad::ErrorStatus::eNotConnected)
        .value("NoInputPath", Acad::ErrorStatus::eNoInputPath)
        .value("NotAssociative", Acad::ErrorStatus::eNotAssociative)
        .value("NotG1Continuous", Acad::ErrorStatus::eNotG1Continuous)
        .value("OwnerToBeTransformed", Acad::ErrorStatus::eOwnerToBeTransformed)
        .value("MustBeInteger", Acad::ErrorStatus::eMustBeInteger)
        .value("MustBePositiveInteger", Acad::ErrorStatus::eMustBePositiveInteger)
        .value("ChangedAgainstAssociativity", Acad::ErrorStatus::eChangedAgainstAssociativity)
        .value("ItemCountChanged", Acad::ErrorStatus::eItemCountChanged)
        .value("GetAdIntImgServicesFailed", Acad::ErrorStatus::eGetAdIntImgServicesFailed)
        .value("ReadImageBufferFailed", Acad::ErrorStatus::eReadImageBufferFailed)
        .value("WriteImageBufferFailed", Acad::ErrorStatus::eWriteImageBufferFailed)
        .value("GetImageBytesFailed", Acad::ErrorStatus::eGetImageBytesFailed)
        .value("GetImageDIBFailed", Acad::ErrorStatus::eGetImageDIBFailed)
        .value("ConvertImageFormatFailed", Acad::ErrorStatus::eConvertImageFormatFailed)
        .value("GetPreviewImageFailed", Acad::ErrorStatus::eGetPreviewImageFailed)
        .value("InvalidPreviewImage", Acad::ErrorStatus::eInvalidPreviewImage)
        .value("DelayMore", Acad::ErrorStatus::eDelayMore)
        .value("PreviewFailed", Acad::ErrorStatus::ePreviewFailed)
        .value("AbortPreview", Acad::ErrorStatus::eAbortPreview)
        .value("EndPreview", Acad::ErrorStatus::eEndPreview)
        .value("NoPreviewContext", Acad::ErrorStatus::eNoPreviewContext)
        .value("FileNotInCloud", Acad::ErrorStatus::eFileNotInCloud)
        ;
};

void initPyDbModule()
{
    PyImport_AppendInittab(PyDbNamespace, &PyInit_PyDb);
}
